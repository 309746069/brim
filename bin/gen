#!/usr/bin/env node

var _ = require("lodash")
var fs = require("fs-extra")
var program = require("commander")

/*
  Uitility Functions
*/

const write = (path, contents) => {
  fs.writeFileSync(path, contents)
  console.log(`Created: ${path}`)
}

const append = (path, contents) => {
  fs.appendFileSync(path, contents)
  console.log(`Appended: ${path} => ${contents}`)
}

const component = name => (
`/* @flow */

import React from "react"

type Props = {}

export default class ${name} extends React.Component<Props> {
  render() {
    return (
      <div className="${_.kebabCase(name)}">
        <h1>${name}</h1>
      </div>
    )
  }
}
`
)

/*
  CLI parsing
*/

program
  .command("component <name>")
  .action(name => write(`src/js/components/${name}.js`, component(name)))

program
  .command("style <name>")
  .action(name => {
    name = _.kebabCase(name)
    write(`src/css/_${name}.scss`, `/* Styles for ${name} component */`)
    append(`src/css/main.scss`, `@import "${name}";`)
  })

program.parse(process.argv)
