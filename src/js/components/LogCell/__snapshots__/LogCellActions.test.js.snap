// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LogCellActions
    dispatch={[MockFunction]}
    field={
      Field {
        "name": "_path",
        "type": "string",
        "value": "conn",
      }
    }
    log={
      Log {
        "descriptor": Array [
          Object {
            "name": "_td",
            "type": "int",
          },
          Object {
            "name": "_path",
            "type": "string",
          },
          Object {
            "name": "ts",
            "type": "time",
          },
          Object {
            "name": "uid",
            "type": "string",
          },
          Object {
            "name": "id.orig_h",
            "type": "addr",
          },
          Object {
            "name": "id.orig_p",
            "type": "port",
          },
          Object {
            "name": "id.resp_h",
            "type": "addr",
          },
          Object {
            "name": "id.resp_p",
            "type": "port",
          },
          Object {
            "name": "proto",
            "type": "enum",
          },
          Object {
            "name": "service",
            "type": "string",
          },
          Object {
            "name": "duration",
            "type": "interval",
          },
          Object {
            "name": "orig_bytes",
            "type": "count",
          },
          Object {
            "name": "resp_bytes",
            "type": "count",
          },
          Object {
            "name": "conn_state",
            "type": "string",
          },
          Object {
            "name": "local_orig",
            "type": "bool",
          },
          Object {
            "name": "local_resp",
            "type": "bool",
          },
          Object {
            "name": "missed_bytes",
            "type": "count",
          },
          Object {
            "name": "history",
            "type": "string",
          },
          Object {
            "name": "orig_pkts",
            "type": "count",
          },
          Object {
            "name": "orig_ip_bytes",
            "type": "count",
          },
          Object {
            "name": "resp_pkts",
            "type": "count",
          },
          Object {
            "name": "resp_ip_bytes",
            "type": "count",
          },
          Object {
            "name": "tunnel_parents",
            "type": "set[string]",
          },
        ],
        "tuple": Array [
          "0",
          "conn",
          "1425612054.369843",
          "Cynwae4qh1GxM82hQ2",
          "192.168.0.50",
          "1900",
          "239.255.255.250",
          "1900",
          "udp",
          "-",
          "2.000293",
          "282",
          "0",
          "S0",
          "-",
          "-",
          "0",
          "D",
          "3",
          "366",
          "0",
          "0",
          "(empty)",
        ],
      }
    }
    onClose={[Function]}
    space={
      Object {
        "close_timeout": 5000,
        "compression": "none",
        "flush_timeout": 500,
        "maxTime": "2015-04-13 09:36:33.750",
        "max_time": Object {
          "ns": 750000000,
          "sec": 1428917793,
        },
        "max_writers": 150,
        "minTime": "2015-03-05 14:15:00.000",
        "min_time": Object {
          "ns": 0,
          "sec": 1425564900,
        },
        "name": "default",
        "packet_support": true,
        "size": 4580591172,
        "slab_fanout": 8,
        "slab_threshold": 131072,
      }
    }
    style={
      Object {
        "left": 1,
        "top": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bounds": true,
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bounds": true,
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
